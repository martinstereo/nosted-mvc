@model nosted_dotnet.MVC.Models.LoggIn.LoginViewModel 

@{
    Layout = null; // Bruker denne linjen fordi vi ikke vil bruke en felles layout.
}

<!DOCTYPE html>
<html>
<head>
    <title>Innlogging</title>
    <link rel="stylesheet" type="text/css" href="~/css/LogIn.css"> <!-- Link to your CSS file -->
    <link rel="stylesheet" href="https://fonts.googleapis.com/css?family=Font+Name">
    </head>
<body>
<div class="text-center">
    <img src="images/nlogo.png" alt="Logo" width="100" height="100" />
    <h2>Innlogging</h2>
</div>

@using (Html.BeginForm("Index", "LogIn", FormMethod.Post))
{
    <!-- Displays validation summary with an error message if ModelState is not valid. -->
    @if (ViewData.ModelState.IsValid)
    {
        <div class="form-group">
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        </div>
    }
    
    <div class="form-group">
        @Html.LabelFor(m => m.Brukernavn)
        @Html.TextBoxFor(m => m.Brukernavn, new { @class = "form-control" }) <!-- Generates a text input for 'Brukernavn' with a CSS class 'form-control'. -->
        @Html.ValidationMessageFor(m => m.Brukernavn)
    </div>

    <div class="form-group">
        @Html.LabelFor(m => m.Passord)
        @Html.PasswordFor(m => m.Passord, new { @class = "form-control" })  <!-- Generates a password input for 'Passord' with a CSS class 'form-control'. -->
        @Html.ValidationMessageFor(m => m.Passord)
    </div>

    <div class="btn login-btn">
        <input type="submit" value="Logg inn" class="btn login-btn" />
    </div>
}
</body>
</html>