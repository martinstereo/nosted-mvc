// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using nosted_dotnet.MVC.Data;

#nullable disable

namespace nosted_dotnet.MVC.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20231101000636_missingSjekkliste2")]
    partial class missingSjekkliste2
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.12")
                .HasAnnotation("Proxies:ChangeTracking", false)
                .HasAnnotation("Proxies:CheckEquality", false)
                .HasAnnotation("Proxies:LazyLoading", true)
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("nosted_dotnet.MVC.Entities.Adresse", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Gate")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("Postkode")
                        .HasColumnType("int");

                    b.Property<string>("Poststed")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Adresse", (string)null);
                });

            modelBuilder.Entity("nosted_dotnet.MVC.Entities.Ansatt", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("AdresseId")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .HasColumnType("longtext");

                    b.Property<string>("Etternavn")
                        .HasColumnType("longtext");

                    b.Property<string>("Navn")
                        .HasColumnType("longtext");

                    b.Property<string>("Stilling")
                        .HasColumnType("longtext");

                    b.Property<string>("TelefonNr")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("AdresseId");

                    b.ToTable("Ansatt", (string)null);
                });

            modelBuilder.Entity("nosted_dotnet.MVC.Entities.Kunde", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("AdresseId")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .HasColumnType("longtext");

                    b.Property<string>("Etternavn")
                        .HasColumnType("longtext");

                    b.Property<string>("Navn")
                        .HasColumnType("longtext");

                    b.Property<string>("TelefonNr")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("AdresseId");

                    b.ToTable("Kunde", (string)null);
                });

            modelBuilder.Entity("nosted_dotnet.MVC.Entities.Ordre", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("KundeId")
                        .HasColumnType("int");

                    b.Property<int>("ProduktId")
                        .HasColumnType("int");

                    b.Property<DateTime>("ServiceDato")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("ServiceRep")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("KundeId");

                    b.HasIndex("ProduktId");

                    b.ToTable("Ordre", (string)null);
                });

            modelBuilder.Entity("nosted_dotnet.MVC.Entities.Produkt", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Model")
                        .HasColumnType("longtext");

                    b.Property<string>("RegNr")
                        .HasColumnType("longtext");

                    b.Property<string>("Type")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Produkt", (string)null);
                });

            modelBuilder.Entity("nosted_dotnet.MVC.Entities.ServiceSkjema", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("ArbeidsTimer")
                        .HasColumnType("int");

                    b.Property<string>("AvtaltKunde")
                        .HasColumnType("longtext");

                    b.Property<string>("DelerBrukt")
                        .HasColumnType("longtext");

                    b.Property<string>("DelerSkiftet")
                        .HasColumnType("longtext");

                    b.Property<int>("OrdreId")
                        .HasColumnType("int");

                    b.Property<string>("RepBeskrivelse")
                        .HasColumnType("longtext");

                    b.Property<string>("UtførtAv")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("OrdreId");

                    b.ToTable("ServiceSkjema", (string)null);
                });

            modelBuilder.Entity("nosted_dotnet.MVC.Entities.Sjekk", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Navn")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("SjekkGruppe")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Sjekk");
                });

            modelBuilder.Entity("nosted_dotnet.MVC.Entities.Sjekkliste", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<float?>("BremseKraft")
                        .HasColumnType("float");

                    b.Property<string>("BremserBP")
                        .HasColumnType("longtext");

                    b.Property<string>("BremsesylinderTetninger")
                        .HasColumnType("longtext");

                    b.Property<string>("ClutchLameller")
                        .HasColumnType("longtext");

                    b.Property<string>("HydraulikkblokkTest")
                        .HasColumnType("longtext");

                    b.Property<string>("KjedehjulKile")
                        .HasColumnType("longtext");

                    b.Property<string>("Kjedestrammer")
                        .HasColumnType("longtext");

                    b.Property<string>("Knappekasse")
                        .HasColumnType("longtext");

                    b.Property<string>("Ledningsnett")
                        .HasColumnType("longtext");

                    b.Property<string>("MechanicComment")
                        .HasColumnType("longtext");

                    b.Property<string>("OljeskifteGirboks")
                        .HasColumnType("longtext");

                    b.Property<string>("OljeskifteTank")
                        .HasColumnType("longtext");

                    b.Property<int>("OrdreId")
                        .HasColumnType("int");

                    b.Property<string>("PinionLager")
                        .HasColumnType("longtext");

                    b.Property<string>("Radio")
                        .HasColumnType("longtext");

                    b.Property<string>("Resultat")
                        .HasColumnType("longtext");

                    b.Property<string>("RingsylinderTetninger")
                        .HasColumnType("longtext");

                    b.Property<string>("Slanger")
                        .HasColumnType("longtext");

                    b.Property<string>("SylinderLekasje")
                        .HasColumnType("longtext");

                    b.Property<float?>("TrekKraft")
                        .HasColumnType("float");

                    b.Property<string>("TrommelLager")
                        .HasColumnType("longtext");

                    b.Property<float?>("TrykkSetting")
                        .HasColumnType("float");

                    b.Property<string>("Wire")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("OrdreId");

                    b.ToTable("Sjekkliste", (string)null);
                });

            modelBuilder.Entity("nosted_dotnet.MVC.Entities.UtførtSjekk", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("SjekkId")
                        .HasColumnType("int");

                    b.Property<int>("SjekklisteId")
                        .HasColumnType("int");

                    b.Property<int>("Verdi")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("SjekkId");

                    b.HasIndex("SjekklisteId");

                    b.ToTable("UtførtSjekk");
                });

            modelBuilder.Entity("nosted_dotnet.MVC.Entities.Ansatt", b =>
                {
                    b.HasOne("nosted_dotnet.MVC.Entities.Adresse", "Adresse")
                        .WithMany()
                        .HasForeignKey("AdresseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Adresse");
                });

            modelBuilder.Entity("nosted_dotnet.MVC.Entities.Kunde", b =>
                {
                    b.HasOne("nosted_dotnet.MVC.Entities.Adresse", "Adresse")
                        .WithMany()
                        .HasForeignKey("AdresseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Adresse");
                });

            modelBuilder.Entity("nosted_dotnet.MVC.Entities.Ordre", b =>
                {
                    b.HasOne("nosted_dotnet.MVC.Entities.Kunde", "Kunde")
                        .WithMany()
                        .HasForeignKey("KundeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("nosted_dotnet.MVC.Entities.Produkt", "Produkt")
                        .WithMany()
                        .HasForeignKey("ProduktId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Kunde");

                    b.Navigation("Produkt");
                });

            modelBuilder.Entity("nosted_dotnet.MVC.Entities.ServiceSkjema", b =>
                {
                    b.HasOne("nosted_dotnet.MVC.Entities.Ordre", "Ordre")
                        .WithMany()
                        .HasForeignKey("OrdreId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Ordre");
                });

            modelBuilder.Entity("nosted_dotnet.MVC.Entities.Sjekkliste", b =>
                {
                    b.HasOne("nosted_dotnet.MVC.Entities.Ordre", "Ordre")
                        .WithMany()
                        .HasForeignKey("OrdreId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Ordre");
                });

            modelBuilder.Entity("nosted_dotnet.MVC.Entities.UtførtSjekk", b =>
                {
                    b.HasOne("nosted_dotnet.MVC.Entities.Sjekk", "Sjekk")
                        .WithMany("UtførteSjekker")
                        .HasForeignKey("SjekkId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("nosted_dotnet.MVC.Entities.Sjekkliste", "Sjekkliste")
                        .WithMany()
                        .HasForeignKey("SjekklisteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Sjekk");

                    b.Navigation("Sjekkliste");
                });

            modelBuilder.Entity("nosted_dotnet.MVC.Entities.Sjekk", b =>
                {
                    b.Navigation("UtførteSjekker");
                });
#pragma warning restore 612, 618
        }
    }
}
